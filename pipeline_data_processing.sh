#1. Data Cleaning with Trimmomatic: Trimmomatic is used to remove adapter sequences, trim low-quality bases, and filter out poor-quality reads from raw sequencing data. This step is crucial for improving read quality, which is essential for accurate alignment and downstream analysis.
#bash
for i in $(cat $path_raw_read/samplelist.txt); do
    trimmomatic PE -threads 5 \
        $path_raw_cutadapt/${i}_cutadapt_R1.fastq \
        $path_raw_cutadapt/${i}_cutadapt_R2.fastq \
        -baseout $path_raw_trimmomatic/${i}_cutadapt_trim.fastq \
        LEADING:30 TRAILING:30 SLIDINGWINDOW:4:15 AVGQUAL:20 MINLEN:20
done

#2. Alignment of Cleaned Reads to a Reference
#2.1 STAR indexing
#, we generate the genome index using STAR. This step prepares the reference genome for efficient alignment.
#bash
STAR --runMode genomeGenerate \
     --runThreadN 5 \
     --genomeFastaFiles ./Homo_sapiens.GRCh38.dna.primary_assembly.fa \
     --genomeDir ./STAR_index/ \
     --sjdbGTFfile ./Homo_sapiens.GRCh38.111.gtf \
     --sjdbOverhang 149

#2.2 STAR mapping
#Next, we align the cleaned reads to the reference genome using STAR. This step produces sorted BAM files and generates various output files for downstream analysis.
for i in $(cat $path_raw_read/samplelist.txt); do
    STAR --runThreadN 10 \
         --genomeDir /home/boot/qiangsu/ref/STAR_index/ \
         --readFilesIn /home/boot/qiangsu/drug_pool/TCM_process_data/trimmed_data/${i}_trim_1P.fastq /home/boot/qiangsu/drug_pool/TCM_process_data/trimmed_data/${i}_trim_2P.fastq \
         --sjdbOverhang 149 \
         --outFileNamePrefix /home/boot/qiangsu/drug_pool/TCM_process_data/sam_data/${i}- \
         --outSAMtype BAM SortedByCoordinate \
         --twopassMode Basic \
         --quantMode TranscriptomeSAM GeneCounts \
         --chimOutType Junctions SeparateSAMold \
         --chimSegmentMin 10
done

#3. Converting SAM to BAM with Samtools
#We use Samtools to convert the SAM files generated by STAR into BAM files. This step also sorts the BAM files by coordinate.
#bash
for i in $(cat $path_raw_read/samplelist.txt); do
    samtools sort -@ 10 -o ${bam_dir}/${i}_cutadapt_trim.bam ${sam_dir}/${i}_cutadapt_trim.sam
done
echo "Samtools conversion done"

#4. Indexing BAM Files with Samtools
#Next, we index the sorted BAM files to facilitate rapid access to specific genomic regions.
#bash
for i in $(cat $path_raw_read/samplelist.txt); do
    samtools index -@ 10 ${bam_dir}/${i}_cutadapt_trim.bam
done

#5. Transcript Assembly with Cufflinks
#Finally, we use Cufflinks to assemble transcripts from the aligned reads. This step generates transcript abundance estimates and can be used for differential expression analysis.
#bash
for i in $(cat $path_raw_read/samplelist.txt); do
    cufflinks -p 10 \
              --library-type fr-firststrand \
              -G /home/data/qs/data/reference_isoform/mus_ref/Mus_musculus.GRCm39.112.chr.gtf \
              -b /home/data/qs/data/reference_isoform/mus_ref/Mus_musculus.GRCm39.dna.primary_assembly.fa \
              -o ./cufflinks_result_nonbiascorrect_musHD_COX-1/${i} \
              /home/data/qs/HGC20231021002-0004/trimmed_data/cufflinks_result_HD/${i}_Aligned.sortedByCoord.out.bam
done
